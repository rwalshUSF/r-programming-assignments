[
  {
    "objectID": "posts/Module 3/index.html",
    "href": "posts/Module 3/index.html",
    "title": "Module # 3: Assignment: Importing Data and Function Evaluation in R",
    "section": "",
    "text": "This my Module #3 post for my LIS4370 blog. Welcome!\nTasks # 1 - Define and Inspect your data\n\n# In R, create vectors (correcting any syntax issues)\nName&lt;-c(\"Jeb\",\"Donald\",\"Ted\",\"Marco\",\"Carly\",\"Hillary\",\"Bernie\")\nABC_poll&lt;-c(4,62,51,21,2,14,15)\nCBS_poll&lt;-c(12,75,43,19,1,21,19)\n\n# Combine into a data frame\ndf_polls&lt;-data.frame(Name,ABC_poll,CBS_poll)\n\n# Use str() and head() to inspect your data frame\nstr(df_polls)\n\n'data.frame':   7 obs. of  3 variables:\n $ Name    : chr  \"Jeb\" \"Donald\" \"Ted\" \"Marco\" ...\n $ ABC_poll: num  4 62 51 21 2 14 15\n $ CBS_poll: num  12 75 43 19 1 21 19\n\nhead(df_polls)\n\n     Name ABC_poll CBS_poll\n1     Jeb        4       12\n2  Donald       62       75\n3     Ted       51       43\n4   Marco       21       19\n5   Carly        2        1\n6 Hillary       14       21\n\n\nTask # 2 - Compute Summary Statistics\n\n# Compute the mean, median, and range for each poll\n\n# mean for ABC poll\nmean(df_polls$ABC_poll)\n\n[1] 24.14286\n\n# median for ABC poll\nmedian(df_polls$ABC_poll)\n\n[1] 15\n\n# range for ABC poll\nrange(df_polls$ABC_poll)\n\n[1]  2 62\n\n# mean for CBS poll\nmean(df_polls$CBS_poll)\n\n[1] 27.14286\n\n# median for CBS poll\nmedian(df_polls$CBS_poll)\n\n[1] 19\n\n# range for CBS poll\nrange(df_polls$CBS_poll)\n\n[1]  1 75\n\n\n\n# Add a column for the difference between CBS and ABC\ndf_polls$Diff&lt;-df_polls$CBS_poll-df_polls$ABC_poll\n\nTasks # 3 & 4 - Discuss and Reflect after reading text and programming analysis\nOn your blog, write 2–3 paragraphs addressing:\nKey patterns you observe (e.g., which candidate shows the largest discrepancies).\nWhen looking at the data frame and the poll count values for each candidate, the data looks well organized at first with each candidates name and the estimated poll results side by side in each corresponding row for that candidate. The means for each poll are rather close with ABC_poll = ~24 and CBS_poll ~27 for a difference of ~3. The medians have slightly more variance as the ABC_polls = 15 and the CBS_polls = 19, a difference of 4. The ranges are close as well with the ABC_polls ranging from 2-62 and the CBS_polls from 1-75.\nWhen the ‘Diff’ column is calculated with CBS_poll-ABC_poll values: Donald shows the largest positive discrepancies and Ted shows the largest negative discrepancies.\nWhen the ‘Diff’ column is calculated with ABC_poll-CBS_poll values: Ted shows the largest positive discrepancies and Donald shows the largest negative discrepancies.\nImpact of using made‑up data—what limitations does this introduce?\nThe main impact and risks/limitations of using made up data seems to be the method chosen for evaluating the difference between the two polls. Depending on which poll value is subtracted from the other has a large impact on the final result. For ex. the results look much different in favor of one candidate for another when ABC_polls values are subtracted from CBS_polls values versus CBS_polls values are subtracted from ABC_polls values.\nHow you might collect or validate real poll data in a true analysis.\nOne strategy I would implement to collect or validate real poll data in a true analysis would be to label the difference specifically or to add a two bar visualization that shows the counts side by side to display the difference rather than using a subtraction method.\nInclude your R code (in a code chunk) and the generated plot.\n\nlibrary(ggplot2)\ndf_polls$Name&lt;-as.factor(df_polls$Name)\n\n# Here is the bar chart showing the difference between CBS_poll-ABC_poll\nggplot(df_polls,aes(x=Name,y=Diff, color=Diff, fill=Diff))+\n  geom_bar(stat = \"identity\")+\n  ylab(\"Difference between polls\")+\n  ggtitle(\"Difference between CBS_poll-ABC_poll\")\n\n\n\n\n\n\n\n# Re-calculate the Diff column for the difference between ABC and CBS\ndf_polls$Diff&lt;-df_polls$ABC_poll-df_polls$CBS_poll\n\n# Here is the bar chart showing the difference between ABC_poll-CBS_poll\nggplot(df_polls,aes(x=Name,y=Diff, color=Diff, fill=Diff))+\n  geom_bar(stat = \"identity\")+\n  ylab(\"Difference between polls\")+\n  ggtitle(\"Difference between ABC_poll-CBS_poll\")\n\n\n\n\n\n\n\n\nHere is a screenshot of my updated Github repo with the script and link to the new Module 3 blog post:\nhttps://rwalshusf.quarto.pub/httpsrwalshusfquartopubr-programming-journal---robert-walsh/posts/Module%203/"
  },
  {
    "objectID": "posts/Module 1/index.html",
    "href": "posts/Module 1/index.html",
    "title": "Module # 1: Assignment #1:",
    "section": "",
    "text": "This my first post for my LIS4370 blog. Welcome!\nTask # 1\nI have successfully created a GitHub repository named: r-programming-assignments\nHere is a screenshot of the repository and README.md:\n\nTasks # 2 & 3\nI have also created a blog titled “R Programming Journal – Robert Walsh”.\nHere is a screenshot of the blog and installed R Studio console:\n\nThe installation of R Studio was straightforward, mainly because I had already installed the program and IDE on my machine for a different course here at USF. One issue I had was connecting the blog project to the new GitHub repository. I resolved this problem by copying the commands that GitHub generated when the repository was created and then running them in the R Studio terminal. This worked well and connected the R Studio blog project to the Git Hub version control repository. A second issue that I encountered was software updates. I had not used R Studio for quite some time; therefore, I needed to complete some updates. After the updates were completed, I was able to use the software and the IDE. I am currently on a Windows 11 PC, using version ‘R 4.4.2’ and R Studio version ‘2024.12.0.467’.\nTask # 4\nWhen using the R programming language, vectors are fundamental objects or entities that serve as containers for storing data elements or data values. Vector container objects can be used in various ways to store data in the computer’s memory, and the vector addresses/information can be referenced at a later time, throughout the program to recall the values that are stored within them. Vectors are fundamental to data analysis in R because they have the ability and flexibility to have descriptive names that represent the data that they contain. The functions and applications in R Programming utilize the vector abstraction ability to enable programs to perform vector math and use vector elements as input parameters in functions. Results from calculations and analysis can be updated and stored in new or existing vectors, allowing further data analysis."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "UNIVERSITY OF SOUTH FLORIDA - SCHOOL OF INFORMATION STUDENT\nA blog for sharing my class assignments."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Programming Journal - Robert Walsh",
    "section": "",
    "text": "Module # 3: Assignment: Importing Data and Function Evaluation in R\n\n\n\n\n\n\n\n\n\n\n\nSep 5, 2025\n\n\nRobert Walsh\n\n\n\n\n\n\n\n\n\n\n\n\nModule # 2: Assignment: Importing Data and Function Evaluation in R\n\n\n\n\n\n\n\n\n\n\n\nAug 29, 2025\n\n\nRobert Walsh\n\n\n\n\n\n\n\n\n\n\n\n\nModule # 1: Assignment #1:\n\n\n\n\n\n\n\n\n\n\n\nAug 24, 2025\n\n\nRobert Walsh\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Module 2/index.html",
    "href": "posts/Module 2/index.html",
    "title": "Module # 2: Assignment: Importing Data and Function Evaluation in R",
    "section": "",
    "text": "This my Module #2 post for my LIS4370 blog. Welcome!\nTasks # 1 & 2\nI have downloaded and reviewed the data import instructions. The ‘readr’ functions are more familiar to me than the ‘tidyr’ and I have experience reading and writing various data sets with .csv, .tsv, and html links. I have also read the assigned Chapters.\nTask # 3\nEvaluate the ‘myMean()’ function:\n\n# Use the vector:\n\nassignment2 &lt;- c(16, 18, 14, 22, 27, 17, 19, 17, 17, 22, 20, 22)\n\n# Consider the function:\n\nmyMean &lt;- function(assignment2) {\n  return(sum(assignment) / length(someData))\n}\n\n# Run myMean(assignment2) and record the output or error:\nmyMean(assignment2)\n\nError in myMean(assignment2): object 'assignment' not found\n\n# The result or error message from testing myMean(assignment2):\n\n\nThe function call for ‘myMean(assignment2)’ fails because the variable names inside the functions instructions are incorrect. The function takes an argument or input parameter of ‘assignment2’ and the instructions attempt to reference objects named ‘assignment’ in the sum() function and ‘someData’ in the length() function.\n\n# This is a corrected version of the myMean() function that correctly returns\n# the mean of 'assignment2'\n\nassignment2 &lt;- c(16, 18, 14, 22, 27, 17, 19, 17, 17, 22, 20, 22)\n\nmyMean &lt;- function(assignment2) {\n  return(sum(assignment2) / length(assignment2))\n}\n\n# Run myMean(assignment2) and record the output:\nmyMean(assignment2)\n\n[1] 19.25\n\n\nHere is a screenshot of my GitHub repository that shows the blog link and the corrected myMean function .R file: \nBlog link:\nhttps://rwalshusf.quarto.pub/httpsrwalshusfquartopubr-programming-journal---robert-walsh/"
  }
]