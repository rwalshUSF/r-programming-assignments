{
  "hash": "38c6d4e91314a4d88f1355bc897c0b04",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Module # 3: Assignment: Introduction to data.frame\"\nauthor: \"Robert Walsh\"\ndate: \"2025-09-05\"\n---\n\n\n\nThis my Module #3 post for my LIS4370 blog. Welcome!\n\nTasks \\# 1 - Define and Inspect your data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# In R, create vectors (correcting any syntax issues)\nName<-c(\"Jeb\",\"Donald\",\"Ted\",\"Marco\",\"Carly\",\"Hillary\",\"Bernie\")\nABC_poll<-c(4,62,51,21,2,14,15)\nCBS_poll<-c(12,75,43,19,1,21,19)\n\n# Combine into a data frame\ndf_polls<-data.frame(Name,ABC_poll,CBS_poll)\n\n# Use str() and head() to inspect your data frame\nstr(df_polls)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t7 obs. of  3 variables:\n $ Name    : chr  \"Jeb\" \"Donald\" \"Ted\" \"Marco\" ...\n $ ABC_poll: num  4 62 51 21 2 14 15\n $ CBS_poll: num  12 75 43 19 1 21 19\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(df_polls)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Name ABC_poll CBS_poll\n1     Jeb        4       12\n2  Donald       62       75\n3     Ted       51       43\n4   Marco       21       19\n5   Carly        2        1\n6 Hillary       14       21\n```\n\n\n:::\n:::\n\n\n\nTask \\# 2 - Compute Summary Statistics\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute the mean, median, and range for each poll\n\n# mean for ABC poll\nmean(df_polls$ABC_poll)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 24.14286\n```\n\n\n:::\n\n```{.r .cell-code}\n# median for ABC poll\nmedian(df_polls$ABC_poll)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n\n```{.r .cell-code}\n# range for ABC poll\nrange(df_polls$ABC_poll)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  2 62\n```\n\n\n:::\n\n```{.r .cell-code}\n# mean for CBS poll\nmean(df_polls$CBS_poll)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 27.14286\n```\n\n\n:::\n\n```{.r .cell-code}\n# median for CBS poll\nmedian(df_polls$CBS_poll)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 19\n```\n\n\n:::\n\n```{.r .cell-code}\n# range for CBS poll\nrange(df_polls$CBS_poll)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  1 75\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add a column for the difference between CBS and ABC\ndf_polls$Diff<-df_polls$CBS_poll-df_polls$ABC_poll\n```\n:::\n\n\n\nTasks \\# 3 & 4 - Discuss and Reflect after reading text and programming analysis\n\nOn your blog, write 2–3 paragraphs addressing:\n\nKey patterns you observe (e.g., which candidate shows the largest discrepancies).\n\nWhen looking at the data frame and the poll count values for each candidate, the data looks well organized at first with each candidates name and the estimated poll results side by side in each corresponding row for that candidate. The means for each poll are rather close with ABC_poll = \\~24 and CBS_poll \\~27 for a difference of \\~3. The medians have slightly more variance as the ABC_polls = 15 and the CBS_polls = 19, a difference of 4. The ranges are close as well with the ABC_polls ranging from 2-62 and the CBS_polls from 1-75.\n\nWhen the 'Diff' column is calculated with CBS_poll-ABC_poll values: Donald shows the largest positive discrepancies and Ted shows the largest negative discrepancies.\n\nWhen the 'Diff' column is calculated with ABC_poll-CBS_poll values: Ted shows the largest positive discrepancies and Donald shows the largest negative discrepancies.\n\nImpact of using made‑up data—what limitations does this introduce?\n\nThe main impact and risks/limitations of using made up data seems to be the method chosen for evaluating the difference between the two polls. Depending on which poll value is subtracted from the other has a large impact on the final result. For ex. the results look much different in favor of one candidate for another when ABC_polls values are subtracted from CBS_polls values versus CBS_polls values are subtracted from ABC_polls values.\n\nHow you might collect or validate real poll data in a true analysis.\n\nOne strategy I would implement to collect or validate real poll data in a true analysis would be to label the difference specifically or to add a two bar visualization that shows the counts side by side to display the difference rather than using a subtraction method.\n\nInclude your R code (in a code chunk) and the generated plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndf_polls$Name<-as.factor(df_polls$Name)\n\n# Here is the bar chart showing the difference between CBS_poll-ABC_poll\nggplot(df_polls,aes(x=Name,y=Diff, color=Diff, fill=Diff))+\n  geom_bar(stat = \"identity\")+\n  ylab(\"Difference between polls\")+\n  ggtitle(\"Difference between CBS_poll-ABC_poll\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Re-calculate the Diff column for the difference between ABC and CBS\ndf_polls$Diff<-df_polls$ABC_poll-df_polls$CBS_poll\n\n# Here is the bar chart showing the difference between ABC_poll-CBS_poll\nggplot(df_polls,aes(x=Name,y=Diff, color=Diff, fill=Diff))+\n  geom_bar(stat = \"identity\")+\n  ylab(\"Difference between polls\")+\n  ggtitle(\"Difference between ABC_poll-CBS_poll\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n\nHere is a screenshot of my updated Github repo with the script and link to the new Module 3 blog post:\n\n<https://rwalshusf.quarto.pub/httpsrwalshusfquartopubr-programming-journal---robert-walsh/posts/Module%203/>\n\n![](mod3git.png)\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}